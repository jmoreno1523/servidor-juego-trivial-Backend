name: Deploy Backend to EC2

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Copiar archivos al servidor (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          target: /home/ubuntu/backend
          rm: false
          overwrite: true
          source: |
            .
            !.git/**          # excluye todo .git
            !.github/**       # excluye workflows
            !node_modules/**  # excluye node_modules


      # Re-crear .env en el servidor con el valor REAL del secret
      - name: Escribir .env en el servidor
        uses: appleboy/ssh-action@v1.0.0
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}   # <-- inyecta el secret en una env var del job
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/backend
            cat > .env <<EOF
            MONGO_URI=${MONGO_URI}
            PORT=4000
            EOF
            chmod 600 .env
            echo ".env actualizado"

      - name: Instalar dependencias y levantar con PM2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/backend
            npm ci --omit=dev
            # Arranca o reinicia; --update-env para que PM2 coja el nuevo .env si lo usas en PM2
            pm2 restart backend --update-env || pm2 start server.js --name backend --node-args="-r dotenv/config"
            pm2 save
